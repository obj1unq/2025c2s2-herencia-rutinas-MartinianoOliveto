import rutinas.*
import personas.*
describe "Running"{
    const runningPlaya = new Running(intensidad = 1.2)
    test"Calorias que quema running "{
        assert.equals(360, runningPlaya.caloriasQueGasta(5))
        assert.equals(10200, runningPlaya.caloriasQueGasta(90))
    }
}

describe "Maraton"{
    const maratonBA = new Maraton(intensidad = 1.5)

    test"Calorias que quema maraton"{
        assert.equals(900, maratonBA.caloriasQueGasta(5))
        assert.equals(25500, maratonBA.caloriasQueGasta(90))
    }
}

describe "Remo en el Delta"{
    const remoEnElDelta = new Remo(intensidad = 1.3)
    test"Calorias que quema remo"{
        assert.equals(520, remoEnElDelta.caloriasQueGasta(5))
        assert.equals(9360,  remoEnElDelta.caloriasQueGasta(90))
    }
}

describe "Remo de competicion"{
    const remoEnCaminoRemeros = new RemoCompeticion(intensidad = 1.7)
    test"Calorias que quema remo de competicion"{
        assert.equals(510, remoEnCaminoRemeros.caloriasQueGasta(5))
        assert.equals(12750, remoEnCaminoRemeros.caloriasQueGasta(90))
    }
}

describe "Calamardo y rutinas de 5 minutos"{
    const calamardo = new PersonaSedentaria(kilosPorCaloriaQuePierde = 7000, peso = 60)
    const calamardoFlaco = new PersonaSedentaria(kilosPorCaloriaQuePierde = 7000, peso = 49)
    const runningPlaya = new Running(intensidad = 1.2)
    const maratonBA = new Maraton(intensidad = 1.5)
    const remoEnElDelta = new Remo(intensidad = 1.3)
    const remoEnCaminoRemeros = new RemoCompeticion(intensidad = 1.7)
    test"Calamardo hace running en la playa"{
        calamardo.hacerRutina(runningPlaya, 5)
        assert.equals(59.948, calamardo.peso())
    }
    test"Calamardo hace maraton"{
        calamardo.hacerRutina(maratonBA, 5)
        assert.equals(59.871, calamardo.peso())
    }
    test"Calamardo rema en el delta"{
        calamardo.hacerRutina(remoEnElDelta, 5)
        assert.equals(59.925, calamardo.peso()) 
    }
    test"Calamardo rema en el camino de los remeros"{
        calamardo.hacerRutina(remoEnCaminoRemeros, 5)
        assert.equals(59.927, calamardo.peso()) 
    }
    test "Probando flujo excepcional"{
        assert.throwsException({calamardoFlaco.hacerRutina(remoEnCaminoRemeros, 5)})
    }
}
describe "Bob y rutinas"{
    const bob = new PersonaAtleta(kilosPorCaloriaQuePierde = 8000, peso = 40)
    const runningPlaya = new Running(intensidad = 1.2)
    const maratonBA = new Maraton(intensidad = 1.5)
    const remoEnElDelta = new Remo(intensidad = 1.3)
    const remoEnCaminoRemeros = new RemoCompeticion(intensidad = 1.7) 
    test"Bob hace Running en la playa"{
        bob.hacerRutina(runningPlaya, 90)
        assert.equals(39.725, bob.peso())
    }
    test"Bob hace maraton"{
        bob.hacerRutina(maratonBA, 90)
        assert.equals(37.812, bob.peso())
    }
    test"Bob no hace remo"{
       assert.throwsException({bob.hacerRutina(remoEnElDelta, 90)})
       assert.equals(40, bob.peso())
    }
    test"Bob rema en el camino de los remeros"{
       bob.hacerRutina(remoEnCaminoRemeros, 90)
       assert.equals(39.406, bob.peso())
    }
    
}